# This workflow runs integration tests with external services

name: Integration Tests

on:
  schedule:
    - cron: "37 14 * * *" # Run at 14:37 UTC every day
  workflow_dispatch: # Allows triggering the workflow manually in GitHub UI
  push:
    branches: ["main"]
    paths:
      - 'src/**'
      - 'tests/test_integration.py'
      - 'pyproject.toml'
  pull_request:
    branches: ["main"]
    paths:
      - 'src/**'
      - 'tests/test_integration.py'
      - 'pyproject.toml'

# If another run starts while this workflow is still running,
# cancel the earlier run in favor of the next run.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  issues: write # For creating issues on test failures

jobs:
  integration-tests:
    name: Integration Tests
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.11", "3.12"]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v5
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
      
      - name: Install dependencies
        run: |
          uv venv
          uv pip install -e ".[dev,test,runtime]"
      
      - name: Create test cache directory
        run: mkdir -p tests/cassettes
      
      - name: Run integration tests
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          TAVILY_API_KEY: ${{ secrets.TAVILY_API_KEY }}
          LANGSMITH_API_KEY: ${{ secrets.LANGSMITH_API_KEY }}
          LANGSMITH_TRACING: true
          LANGSMITH_TEST_CACHE: tests/cassettes
          PYTHONPATH: ${{ github.workspace }}/src
        run: |
          uv run pytest tests/test_integration.py -v --tb=short --maxfail=3
      
      - name: Upload test artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-artifacts-${{ matrix.python-version }}
          path: |
            tests/cassettes/
            *.log
          retention-days: 7
      
      - name: Create issue on scheduled test failure
        if: failure() && github.event_name == 'schedule'
        uses: actions/github-script@v7
        with:
          script: |
            const title = `Integration tests failed on ${new Date().toISOString().split('T')[0]}`;
            const body = `
            Integration tests failed in scheduled run.
            
            **Details:**
            - Python version: ${{ matrix.python-version }}
            - OS: ${{ matrix.os }}
            - Workflow run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            
            Please investigate the failure and fix any issues.
            `;
            
            // Check if issue already exists
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: ['integration-test-failure']
            });
            
            const existingIssue = issues.data.find(issue => issue.title === title);
            
            if (!existingIssue) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: body,
                labels: ['integration-test-failure', 'bug']
              });
            }
