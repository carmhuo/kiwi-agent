[project]
name = "kiwi"
version = "0.0.1"
description = "Generate SQL queries from natural language"
authors = [
    { name = "carm", email = "example@gmail.com" },
]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.11,<4.0"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    # Core web framework (Flask only)
    "flask>=3.0.0",
    "flask-sock>=0.7.0",
    "flasgger>=0.9.7",
    
    # Data processing and visualization
    "requests>=2.32.0",
    "tabulate>=0.9.0",
    "plotly>=6.0.0",
    "pandas>=2.2.0",
    "kaleido>=0.2.1",
    
    # Database and SQL
    "sqlalchemy>=2.0.0",
    "sqlparse>=0.5.0",
    
    # LangChain ecosystem
    "langgraph>=0.3.0",
    "langchain>=0.3.0",
    "langchain-core>=0.3.0",
    "langchain-openai>=0.3.0",
    "langchain-anthropic>=0.3.0",
    "langchain-community>=0.3.0",
    "langchain-fireworks>=0.3.0",
    "langchain-tavily>=0.1.0",
    
    # Configuration and utilities
    "python-dotenv>=1.0.1",
    
    # Fix protobuf version conflict
    "protobuf>=5.29.0",
]


[project.optional-dependencies]
# Development tools
dev = [
    "mypy>=1.11.1", 
    "ruff>=0.6.1",
    "pytest>=8.3.0",
    "langgraph-cli[inmem]>=0.1.71",
]

# Database backends
postgres = ["psycopg2-binary>=2.9.0", "db-dtypes>=1.0.0"]
mysql = ["PyMySQL>=1.0.0"]
duckdb = ["duckdb>=1.2.0"]

# Vector stores and AI services
chromadb = ["chromadb>=1.0.0"]
openai = ["openai>=1.70.0"]

# FastAPI web framework (optional alternative to Flask)
# Only needed if you want to use the FastAPI endpoints in src/kiwi/fastapi/
fastapi = [
    "fastapi>=0.115.0",
    "pydantic>=2.11.0",
    "uvicorn[standard]>=0.30.0",
]

# All optional dependencies for full installation
all = [
    "psycopg2-binary>=2.9.0",
    "db-dtypes>=1.0.0",
    "PyMySQL>=1.0.0", 
    "duckdb>=1.2.0",
    "chromadb>=1.0.0",
    "openai>=1.70.0",
    "fastapi>=0.115.0",
    "pydantic>=2.11.0",
    "uvicorn[standard]>=0.30.0",
]

[build-system]
requires = ["setuptools>=73.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["kiwi", "kiwi_flask"]
[tool.setuptools.package-dir]
"kiwi_flask" = "src/kiwi"
"kiwi" = "src/kiwi"


[tool.setuptools.package-data]
"*" = ["py.typed"]

[tool.ruff]
lint.select = [
    "E",    # pycodestyle
    "F",    # pyflakes
    "I",    # isort
    "D",    # pydocstyle
    "D401", # First line should be in imperative mood
    "T201",
    "UP",
]
lint.ignore = [
    "UP006",
    "UP007",
    # We actually do want to import from typing_extensions
    "UP035",
    # Relax the convention by _not_ requiring documentation for every function parameter.
    "D417",
    "E501",
]
[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "UP"]
[tool.ruff.lint.pydocstyle]
convention = "google"

[dependency-groups]
# Development dependencies (PEP 735)
dev = [
    "langgraph-cli[inmem]>=0.1.71",
    "pytest>=8.3.0",
    "mypy>=1.11.1",
    "ruff>=0.6.1",
]

# Testing dependencies
test = [
    "pytest>=8.3.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=5.0.0",
]

# Production runtime dependencies
runtime = [
    "duckdb>=1.2.0",
    "chromadb>=1.0.0", 
    "openai>=1.70.0",
]
